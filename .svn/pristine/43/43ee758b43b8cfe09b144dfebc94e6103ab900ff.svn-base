<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- 资源加载方式1::加载所有的配置文件(注:spring中如果出现多个context:property-placeholder,在加载时会出现只加载了一个的情况，所以所有的配置文件都必须一起加载) -->    
    <context:property-placeholder location="classpath*:/conf/*.properties"/>
    
    <!-- 资源文件加载2: 注入djbc数据库连接配置文件信息 (如果自己需要扩展的话，使用这种)-->
    <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations" value="classpath*:/conf/*.properties"/>
    </bean> -->
    
    <!-- 注：spring的contextLoaderListener加载是在springMVC的DispatcherServlet加载之前，如果将包扫描放在springMVC配置文件中，
    	则在如自定义的listener中是获取不到bean对象的，因为自定义listener运行时，springMVC还没加载，所以就还没有创建对象，除非在contextLoaderListener加载时指定的资源也包含了springMVC的资源，不过建议分开好些 -->
    <!--1  对包下的进行扫描，以完成bean的创建和依赖注入 -->
    <context:component-scan base-package="com.hengzhiyi.it">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<!-- 本想实现在不使用JMS时，不扫描jms相关类所在的包activemq下的所有类，但是貌似不起作用，只要将activemq包下的类上的注解注释掉， -->
    	<!-- <context:exclude-filter type="regex" expression="com.hengzhiyi.it.activemq.*"/> -->
    </context:component-scan>
    
    <!-- 注：同上，如果spring其他资源引入放在springMVC的配置文件，则在自定义的Listener中的获取xml中定义的beab时时获取不到的,
    	因为那时候springMVC的配置文件还没加载，除非加载contextLoaderListener资源时一起加载springMVC的资源， 不过觉得分开加载比较好-->
	<!--2 引入其他spring bean分支配置 文件 -->
	<import resource="classpath*:/spring/**/*-bean.xml"/>
	<import resource="classpath*:/spring/**/*-config.xml"/>
	<import resource="classpath*:/spring/**/*-service.xml"/>
</beans>