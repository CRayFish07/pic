<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="com.hengzhiyi.it.pic.dao.IUserDao">
    	<resultMap id="UserMap" type="com.hengzhiyi.it.pic.vo.User">
    		<id column="ID" property="userId" jdbcType="NUMERIC"/>
    		<result column="NAME" property="userName" jdbcType="VARCHAR"/>
    		<result column="PASSWORD" property="password" jdbcType="VARCHAR"/>
    		<result column="AGE" property="age" jdbcType="NUMERIC"/>
    		<result column="ADDRESS" property="address" jdbcType="VARCHAR"/>
    		<result column="PHONE" property="phone" jdbcType="VARCHAR"/>
    		<result column="EMAIL" property="email" jdbcType="VARCHAR"/>
    		<result column="NICK_NAME" property="nickName" jdbcType="VARCHAR"/>
    		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
    		<result column="STATUS" property="status" jdbcType="NUMERIC"/>
    		<result column="PWD_STATUS" property="pwdStatus" jdbcType="NUMERIC"/>
    		<result column="USER_TYPE" property="userType" jdbcType="NUMERIC"/>
    		<result column="WHITE_LIST_TYPE" property="whiteListType" jdbcType="NUMERIC"/>
    	</resultMap>
    
    	<!-- 根据用户名和密码匹配用户 -->
    	<select id="getUserByNamePwd" resultMap="UserMap">
    	  SELECT *
		  	FROM pic_user u
		  WHERE u.name = TRIM(#{0})
		   AND u.password = TRIM(#{1})
    	</select>
    	
    	<select id="getUserById" resultMap="UserMap">
    		SELECT * FROM 
    			pic_user u
    		WHERE u.id = #{0,jdbcType=NUMERIC}	
    	</select>
    	<select id="getUserByName" resultMap="UserMap">
    		SELECT * FROM 
    			pic_user u
    		WHERE u.name = #{0,jdbcType=VARCHAR}	
    	</select>
    	
    	<select id="getUserList" parameterType="com.hengzhiyi.it.pic.vo.PagedVO" resultMap="UserMap">
    		SELECT *
			  FROM (SELECT a.*, rownum rn
			          from (
    						<include refid="pagedCommonSql"/>
			    		) a 
		    		)
			 WHERE rn <![CDATA[ >= ]]> #{beginIndex}
			   AND rn <![CDATA[ <= ]]> #{endIndex}
    	</select>
    	
    	<select id="getUserListCount" parameterType="com.hengzhiyi.it.pic.vo.PagedVO" resultType="java.lang.Integer">
    		SELECT COUNT(*) FROM (
    			<include refid="pagedCommonSql"/>
    		)
    	</select>
    	
    	<sql id="pagedCommonSql">
    		SELECT * FROM pic_user u
   			WHERE u.name <![CDATA[ <> ]]> 'admin'
   			<if test="keyWord != null and keyWord != ''">
   				AND INSTR(u.name,#{keyWord,jdbcType=VARCHAR}) <![CDATA[ > ]]> 0 
   				OR INSTR(u.nick_name,#{keyWord,jdbcType=VARCHAR}) <![CDATA[ > ]]> 0 
   			</if>
   			<if test="params.id != null and params.id != ''">
   				AND u.id = #{params.id}
   			</if>
   			<if test="params.userName != null and params.userName != ''">
   				AND u.name = #{params.userName}
   			</if>
   			<if test="params.status != null and params.status != ''">
   				AND u.status = #{params.status}
   			</if>
   			<if test="params.pwdStatus != null and params.pwdStatus != ''">
   				AND u.pwd_status = #{params.pwdStatus}
   			</if>
   			<if test="params.userType != null and params.userType != ''">
   				AND u.user_type = #{params.userType}
   			</if>
   			<if test="params.whiteListType != null and params.whiteListType != ''">
   				AND u.white_list_type = #{params.whiteListType}
   			</if>
    		ORDER BY u.id DESC
    	</sql>
    	
    	<insert id="addUser" parameterType="com.hengzhiyi.it.pic.vo.User">
    		<selectKey keyProperty="userId" resultType="java.lang.String" order="BEFORE">
    			SELECT PIC_USER_SEQ.NEXTVAL FROM DUAL
    		</selectKey>
    		INSERT INTO pic_user(id,name,password,age,address,phone,email,nick_name,create_time,status,pwd_status,user_type,white_list_type) 
    		VALUES
    		(
    			#{userId,jdbcType=NUMERIC},
    			#{userName,jdbcType=VARCHAR},
    			#{password,jdbcType=VARCHAR},
    			#{age,jdbcType=NUMERIC},
    			#{address,jdbcType=VARCHAR},
    			#{phone,jdbcType=VARCHAR},
    			#{email,jdbcType=VARCHAR},
    			#{nickName,jdbcType=VARCHAR},
    			#{createTime,jdbcType=TIMESTAMP},
    			#{status,jdbcType=NUMERIC},
    			#{pwdStatus,jdbcType=NUMERIC},
    			#{userType,jdbcType=NUMERIC},
    			#{whiteListType,jdbcType=NUMERIC}
			)
    	</insert>
    	
    	<update id="editUser" parameterType="com.hengzhiyi.it.pic.vo.User">
    		UPDATE pic_user a
    		SET a.password = #{password,jdbcType=VARCHAR},
    			a.age = #{age,jdbcType=NUMERIC},
    			a.address = #{address,jdbcType=VARCHAR},
    			a.phone = #{phone,jdbcType=VARCHAR},
    			a.email = #{email,jdbcType=VARCHAR},
    			a.nick_name = #{nickName},
    			a.status = #{status,jdbcType=NUMERIC},
    			a.pwd_status = #{pwdStatus,jdbcType=NUMERIC},
    			a.user_type = NVL(#{userType,jdbcType=NUMERIC},a.user_type),
    			a.WHITE_LIST_TYPE = NVL(#{whiteListType,jdbcType=NUMERIC},a.WHITE_LIST_TYPE)
    		WHERE a.id = #{userId,jdbcType=NUMERIC}
    	</update>
    	
    	<update id="delUserByIds" parameterType="java.util.List">
    		DELETE FROM pic_user a 
    		WHERE a.id IN
    		<foreach item="_id" index="index" collection="list" open="(" close=")" separator=",">
    			#{_id,jdbcType=NUMERIC}
    		</foreach>
    	</update>
    	
    	<update id="updatePwdById" parameterType="com.hengzhiyi.it.pic.vo.User">
    		UPDATE pic_user a
    			SET a.password = #{1,jdbcType=VARCHAR}
    		WHERE a.ID = #{0,jdbcType=NUMERIC}
    	</update>
    </mapper>  
    
    
    
    
    
